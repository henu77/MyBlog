<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.malong.blog.dao.UserInfoMapper">

    <!-- select -->
    <select id="getUserInfoByUsername" resultType="userInfo">
        select *
        from myblog.t_user
        where username = #{usernmae};
    </select>
    <select id="countAllUser" resultType="int">
        select count(*)
        from myblog.t_user
        where role = 'user';
    </select>
    <select id="countAllAdmin" resultType="int">
        select count(*)
        from myblog.t_user
        where role = 'admin'
           or role = 'root';
    </select>
    <select id="getAllUserData" resultType="userInfo">
        select *
        from myblog.t_user;
    </select>

    <select id="getUserDataByLimit" resultType="userInfo">
        select *
        from myblog.t_user

        <where>
            <if test="role != null">
                role = #{role}
            </if>
            <if test="username != null">
                and username like concat('%', #{username}, '%')
            </if>
            <if test="nickname != null">
                and nickname like concat('%', #{nickname}, '%')
            </if>
        </where>
        limit #{startIndex},#{pageSize};
    </select>

    <select id="getUserDataByLimitAdmin" resultType="userInfo">
        select *
        from myblog.t_user
        <where>
            (role = 'admin' or role='root')
            <if test="username != null">
                and username like concat('%', #{username}, '%')
            </if>
            <if test="nickname != null">
                and nickname like concat('%', #{nickname}, '%')
            </if>
        </where>
        limit #{startIndex},#{pageSize};
    </select>

    <select id="getUserInfoById" resultType="userInfo">
        select *
        from myblog.t_user
        where id = #{id}
    </select>
    <select id="queryByUserName" resultType="java.lang.Boolean">
        select *
        from myblog.t_user
        where username = #{username};
    </select>

    <!--  update  -->
    <update id="updateUserInfo">
        update myblog.t_user
        set username=#{username},
            nickname=#{nickname},
            password=#{password},
            email=#{email},
            avatar=#{avatar},
            role=#{role}
        where id = #{id}
    </update>

    <update id="updateAvatar">
        update myblog.t_user
        set avatar=#{avatar}
        where id = #{id}
    </update>

    <!-- delete -->
    <delete id="removeUserById">
        delete
        from myblog.t_user
        where id = #{id};
    </delete>

    <!-- 批量delete -->
    <delete id="batchRemoveByIds" parameterType="int[]">
        <!-- delete from emp where empno in(7789,7790) -->
        <!-- forEach : 用来循环 collection : 用来指定循环的数据的类型 可以填的值有：array,list,map
        item: 循环中为每个循环的数据指定一个别名 index : 循环中循环的下标 open : 开始 close : 结束 separator : 数组中元素之间的分隔符 -->
        delete from myblog.t_user where t_user.id in
        <foreach collection="array" item="arr" index="no" open="("
                 separator="," close=")">
            #{arr}
        </foreach>
    </delete>
    <!-- insert -->
    <insert id="userAdd" parameterType="userInfo">
        insert into myblog.t_user(nickname, username, password, email, avatar, role)
        values (#{nickname}, #{username}, #{password}, #{email}, #{avatar}, #{role});
    </insert>
</mapper>
